package components

import (
	"time"
	"jirku.sk/mcmamina/models"
)

templ TwoWeeksCalendar(days []models.Day, today time.Time) {
	<div class="sm:w-full scroll-m-0 text-right two-weeks-calendar">
		<div class="w-full grid grid-cols-5 gap-2 text-indigo-500 mb-3">
			for _, item := range days {
				@Day(item, today)
			}
		</div>
		<a class="underline underline-offset-4 text-sm" href="/kalendar">
			celý kalendár...
		</a>
	</div>
}

templ Day(day models.Day, today time.Time) {
	<div
 		class={ "group h-16 flex flex-col border hover:scale-105 scale-100 relative",
			"transition-transform duration-500 ease-in-out border-indigo-300 rounded-lg ",
			templ.KV("border-indigo-500", day.Is(today)),
			templ.KV("bg-indigo-200", day.IsWeekend()),
            "day-wrapper " + day.GetDateIdentifier() }
 		if day.HasEvents() {
			tabindex="0"
		}
	>
		<div class={ `text-sm flex flex-grow-0 text px-1 pt-1` }>
			<span class="text-ellipsis font-semibold">{ day.GetAbbr() }</span>
		</div>
		<div class={ `text-sm flex flex-grow px-1 pb-1` }>
			<div class={ `flex flex-grow flex-shrink gap-1 flex-wrap content-start` }>
				for idx := range day.Events {
					<span
 						class={
							`w-2 h-2 md:w-3 md:h-3 rounded-full`,
							templ.KV("bg-pink-500", idx == 0),
							templ.KV("bg-green-500", idx == 1),
							templ.KV("bg-yellow-500", idx == 2),
							templ.KV("bg-blue-500", idx == 3),
							templ.KV("bg-orange-500", idx == 4),
						}
					></span>
				}
			</div>
			<div class={ `flex-grow-0 flex flex-shrink-0 justify-end self-end` }>
				<span class="border-radius rounded-full border border-indigo-300 text-center w-6 h-6 flex justify-center items-center">
					{ day.GetDay() }
				</span>
			</div>
		</div>
	</div>
	if day.HasEvents() {
		<div
 			class={ "transition-all duration-500 w-fit text-left text-sm",
				"bg-indigo-500 text-indigo-100 p-2 z-10 rounded-md",
				"opacity-0 pointer-events-none w-max z-10 relative",
				"event-tooltip " + day.GetDateIdentifier() }
 			style="position: absolute;"
		>
			<h1 class="text-md font-semibold pb-2">{ day.GetFormatedDate() } - { day.GetTitle() }</h1>
			<ul>
				for idx, event := range day.Events {
					<li>
						<span
 							class={
								`w-2 h-2 md:w-3 md:h-3 rounded-full inline-block mr-2`,
								templ.KV("bg-pink-500", idx == 0),
								templ.KV("bg-green-500", idx == 1),
								templ.KV("bg-yellow-500", idx == 2),
								templ.KV("bg-blue-500", idx == 3),
								templ.KV("bg-orange-500", idx == 4),
							}
						></span>{ event.RenderEventRange(day.Date) } - { event.Title }
					</li>
				}
			</ul>
			<div class="arrow absolute bg-indigo-500 w-3 h-3 pointer-events-none rotate-45"></div>
		</div>
	}
}

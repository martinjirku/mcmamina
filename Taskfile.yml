version: '3'

dotenv: ['.env']

tasks:
  default:
    deps: [tswatch, templwatch, csswatch, serverwatch]
  install:
    cmds:
      - go install github.com/cosmtrek/air@latest
      - go install github.com/a-h/templ/cmd/templ@latest
      - pnpm install --silent

  templwatch:
    cmds:
      - templ generate -watch -source-map-visualisations=false
  csswatch:
    cmds:
      - npx tailwindcss -i ./styles/main.css -o ./dist/main.css --watch
  tswatch:
    cmds:
      - npx vite build -w
  serverwatch:
    cmds:
      - air --build.cmd "go build -o ./tmp/main ."

  buildserver:
    cmds:
      - go build -v -i main.go
  buildassets:
    cmds:
      - esbuild --bundle --minify css/index.css > public/bundle.css
  
  dbstart:
    cmds:
      - docker run --name mcmamina -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -v ./.data:/var/lib/postgresql/data -p 5432:5432 -d postgres:alpine
  dbstop:
    cmds:
      - docker stop mcmamina
      - docker rm mcmamina
  dbup:
    cmds:
      - migrate -path ./migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable" up
  dbdown:
    cmds:
      - migrate -path ./migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable" down
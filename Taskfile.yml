version: '3'

dotenv: ['.env']
env:
  GOBIN: "{{.TASKFILE_DIR}}/.task/bin"

tasks:

  bin:base:
    cmds:
      - mkdir -p .task/bin
    silent: true
    generates:
      - .task/bin/{{.name}}
  
  install:
    desc: install dependencies
    deps: ["bin:air", "bin:node_modules"]
    cmds:
      - pnpm install --silent
  bin:air:
    deps: [bin:base]
    silent: true
    cmds:
      - export GOBIN={{.GOBIN}} && go install github.com/air-verse/air@latest
    generates:
      - .task/bin/air
    test:
      - test -f .task/bin/air
  bin:node_modules:
    cmds:
      - pnpm install --silent
    sources:
      - package.json
      - pnpm-lock.yaml
    generates:
      - ./node_modules/

  watch:
    desc: watch files and rerun when something was changed
    deps: [watch:ts, watch:server:wait]
  watch:ts:
    cmds:
      - npx vite build -w
  watch:server:wait:
    cmds:
      - sleep 1
      - task: watch:server
  watch:server:
    deps: [bin:air]
    cmds:
      - .task/bin/air -c .air.toml

  db:start:
    desc: starts database in a docker
    cmds:
      - docker run --name mcmamina -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_DB=$POSTGRES_DB -e POSTGRES_USER=$POSTGRES_USER -v ./.data:/var/lib/postgresql/data -p 5432:5432 -d postgres:alpine
  db:stop:
    desc: starts database in a docker
    cmds:
      - docker stop mcmamina
      - docker rm mcmamina
  db:up:
    desc: run migration up
    cmds:
      - migrate -path ./migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable" up
  db:down:
    desc: run migration down
    cmds:
      - migrate -path ./migrations -database "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5432/$POSTGRES_DB?sslmode=disable" down
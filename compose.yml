services:
  mcmamina:
    build:
      target: watch
    ports:
      - "8080:8080"
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID}
      GOOGLE_SMTP_PWD: ${GOOGLE_SMTP_PWD}
      GOOGLE_SMTP_MAIL: ${GOOGLE_SMTP_MAIL}
      GOOGLE_CAPTCHA_SITE: ${GOOGLE_CAPTCHA_SITE}
      GOOGLE_AUTH_CLIENT_ID: ${GOOGLE_AUTH_CLIENT_ID}
      GOOGLE_AUTH_CLIENT_SECRET: ${GOOGLE_AUTH_CLIENT_SECRET}
      GOOGLE_AUTH_REDIRECT_PATH: ${GOOGLE_AUTH_REDIRECT_PATH}
      SESSION_KEY: ${SESSION_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PANORAMA_URL: ${PANORAMA_URL}
    volumes:
      - pnpm_cache:/pnpm/store
    develop:
      watch:
        - path: package.json
          action: rebuild
        - path: go.mod
          action: rebuild
        - path: handlers/
          action: sync
          target: /app/handlers/
        - path: templates/
          action: sync
          target: /app/templates/
        - path: pkg/
          action: sync
          target: /app/pkg
    command: task watch
    depends_on:
      - db
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: db
      DB_PORT: 5432
  prometheus:
    image: prom/prometheus:v2.52.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    depends_on:
      - mcmamina
  # grafana:
  #   image: grafana/grafana:10.4.2
  #   ports:
  #     - "8082:8082"
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   depends_on:
  #     - prometheus

volumes:
  pnpm_cache:
  postgres-data:
  prometheus-data: